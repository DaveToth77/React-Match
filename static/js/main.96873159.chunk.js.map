{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAEe,SAASA,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAQhE,OACA,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBAAKF,UAAU,OACfC,IAAI,iBACJE,QAZgB,WACbJ,GACHF,EAAaD,IAWbM,IAAI,mBCbV,IAAME,EAAa,CACjB,CAAEH,IAAK,oBAAqBI,SAAU,GACtC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,kBAAmBI,SAAS,GACnC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,oBAAqBI,SAAS,GACrC,CAAEJ,IAAK,mBAAoBI,SAAS,IAkFvBC,MA/Ef,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAEMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAeA,GAAhB,IAAsB2B,GAAIH,KAAKC,cAEtCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAILd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIlD4B,qBAAU,WACJZ,GAAaE,IACfE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEpBT,QAIb8B,KAEAC,YAAW,kBAAMD,MAAa,QAGlC,CAACd,EAAWE,IAGdU,qBAAU,WACRP,MACC,IAGD,IAAMS,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAACiB,GAAD,OAAeA,EAAY,KACpCZ,GAAY,IAId,OACE,sBAAKhB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASc,EAAjB,sBAEA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAC1B,GAAD,OACT,cAAC,EAAD,CAEAA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,SAQd,yCAAab,SClFnBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.96873159.chunk.js","sourcesContent":["import './SingleCard.css'\n\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\n\n  const handleClick = () => {\n    if (!disabled) {\n      handleChoice(card)\n  }\n}\n\n  return (\n  <div className=\"card\" >\n    <div className={flipped ? \"flipped\" : \"\"}>\n      <img className=\"front\" src={card.src} alt=\"card front\" />\n      <img className=\"back\"\n      src=\"/img/cover.png\"\n      onClick={handleClick}\n      alt=\"card back\" />\n    </div>\n  </div>\n)\n}\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport SingleCard from \"./components/SingleCard.js\"\n\nconst cardImages = [\n  { src: \"/img/helmet-1.png\", matched:  false},\n  { src: \"/img/potion-1.png\", matched: false},\n  { src: \"/img/ring-1.png\", matched: false},\n  { src: \"/img/scroll-1.png\", matched: false},\n  { src: \"/img/shield-1.png\", matched: false},\n  { src: \"/img/sword-1.png\", matched: false},\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n  //shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((card) => ({ ...card, id: Math.random() }));\n\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  };\n\n  // handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  //compare choices\nuseEffect(() => {\n  if (choiceOne && choiceTwo) {\n    setDisabled(true)\n    if (choiceOne.src === choiceTwo.src) {\n      setCards(prevCards => {\n        return prevCards.map(card => {\n          if (card.src === choiceOne.src) {\n            return { ...card, matched: true };\n          } else {\n            return card;\n          }\n        })\n      })\n      resetTurn();\n    } else {\n      setTimeout(() => resetTurn(), 700);\n    }\n  }\n},[choiceOne, choiceTwo]);\n\n//start Game automatically\nuseEffect(() => {\n  shuffleCards();\n}, []);\n\n  // reset choices and increase turns\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns((prevTurns) => prevTurns + 1);\n    setDisabled(false);\n  };\n\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map((card) => (\n          <SingleCard\n          key={card.id}\n          card={card}\n          handleChoice={handleChoice}\n          flipped={card === choiceOne || card === choiceTwo || card.matched}\n          disabled={disabled}\n          />\n        ))}\n      </div>\n      <p> Turns: { turns }</p>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}